person.java
package oopproject;

 class person {
		 String firstname,lastname;
	char gender;
	int age;
	float weight;
	person()
	{
		firstname="dharani";
		lastname="chinni";
		gender='f';
		age=22;
		weight=76.3f;
		}
	person(String Firstname,String Lastname,char gender,int age,float weight)
	{
	this.firstname=Firstname;
	this.lastname=Lastname;
	this.gender=gender;
	this.age=age;
	this.weight=weight;
	}
	public String getFirstname()
	{
		return firstname;
	}


	public void setFirstname(String firstname)
	{
		this.firstname = firstname;
	}


	public String getLastname() 
	{
		return lastname;
	}


	public void setLastname(String lastname)
	{
		this.lastname = lastname;
	}


	public char getGender() 
	{
		return gender;
	}


	public void setGender(char gender)
	{
		this.gender = gender;
	}


	public int getAge()
	{
		return age;
	}


	public void setAge(int age)
	{
		this.age = age;
	}


	public float getWeight()
	{
		return weight;
	}


	public void setWeight(float weight)
	{
		this.weight = weight;
	}	
}

		 
personmain.java
package oopproject;

import java.util.Scanner;

public class Personmain {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
			person p=new person();
			System.out.println("Fname :"+p.firstname);
			System.out.println("Lname :"+p.lastname);
			System.out.println("genger :"+p.gender);
			System.out.println("age :"+p.age);
			System.out.println("weight :"+p.weight);
			Scanner s=new Scanner(System.in);
			System.out.println("enter first name");
			String fname=s.nextLine();
			System.out.println("enter last name");
			String lname=s.nextLine();
			

			try{
				if( fname.equals("") && lname.equals(""))
					throw new NullPointerException("throwed exception");
				else
				{
					person p2=new person(fname,lname,'f',20,67.8f);
					System.out.println("Fname :"+p2.getFirstname());
					System.out.println("Lname :"+p2.getLastname());
					System.out.println("genger :"+p2.getGender());
					System.out.println("age :"+p2.getAge());
					System.out.println("weight :"+p2.getWeight());
				}
			}
			catch(NullPointerException e)
			{
				System.out.println("exception caught");
			}
		
		 }


	}

4.2:
package oopproject;
class Person {
	private String name;
	private float age;

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public float getAge() {
		return age;
	}

	public void setAge(float age) {
		this.age = age;
	}
}

abstract class Account {
	private static long count = 0;
	private long accNum;
	private double balance;
	private Person accHolder;

	public long getAccNum() {
		return accNum;
	}

	public void setAccNum(long accNum) {
		this.accNum = accNum;
	}

	public Person getAccHolder() {
		return accHolder;
	}

	public void setAccHolder(Person accHolder) {
		this.accHolder = accHolder;
	}

	public void setBalance(double balance) {
		this.balance = balance;
	}

	public void deposit(double amount) {
		balance += amount;
	}

	public abstract void withdraw(double amount); 
	/*{
		balance -= amount;
	}
*/
	public double getBalance() {
		return balance;
	}

	public Account() {
		accNum = ++count;
	}

	public String toString() {
		return "Account Holder name: " + this.accHolder.getName() + "\nAge: " + this.accHolder.getAge()
				+ "\nAccount Number: " + this.getAccNum() + " \nCurrent Balance: " + this.getBalance();
	}
}

class SavingsAccount extends Account {
	private final double minBalance = 1000;
	double bal;

	public void withdraw(double amount) {
		bal = super.getBalance();
		double bal1 = bal - amount;
		if (bal > minBalance && bal1 >= minBalance) {

			bal -= amount;
			super.setBalance(bal);
		} else {

			System.out.println(" You can withdraw upto  " + (bal - minBalance));
		}

	}
}

class CurrentAccount extends Account {
	public double overdraftLimit = -1000;
	double bal;

	public void withdraw(double amount) {
		bal = super.getBalance();
		double bal1 = bal - amount;
		if (bal > overdraftLimit && bal1 >= overdraftLimit) {

			bal -= amount;
			super.setBalance(bal);
			System.out.println("false");
		} else {

			System.out.println(" You can withdraw upto  " + (bal - overdraftLimit));
			System.out.println("overdraft amount reached");
		}

	}
}

public class AccountAndPerson {

	public static void main(String[] args) {
		Person p1 = new Person();
		p1.setName("Smith");
		p1.setAge(30);
		Person p2 = new Person();
		p2.setName("Kathy");
		p2.setAge(21);
		CurrentAccount smithAcc = new CurrentAccount();
		smithAcc.setAccHolder(p1);
		SavingsAccount kathyAcc = new SavingsAccount();
		kathyAcc.setAccHolder(p2);
		smithAcc.setBalance(2000);
		kathyAcc.setBalance(5000);
		smithAcc.deposit(2000);

		System.out.println("The updated smith account balance is " + smithAcc.getBalance());
		//System.out.println("The updated kathy account balance is " + kathyAcc.getBalance());
		// kathyAcc.withdraw(2000);
		//kathyAcc.withdraw(4500);
		// kathyAcc.withdraw();
		smithAcc.withdraw(6000);
		System.out.println(smithAcc.toString());
		//System.out.println(kathyAcc.toString());

	}
}
